<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>#pyUpload - Sicherer Datei-Upload-Server fÃ¼r eine einfache und sichere DateiÃ¼bertragung - </title>
<meta name="description" content="Beschreibung pyUpload ist eine leistungsstarke und dennoch einfache LÃ¶sung fÃ¼r den sicheren Datei-Upload Ã¼ber HTTPS. Dieses Programm eignet sich ideal,…">
<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1">
<style>
body{font-family:Helvetica,sans-serif;margin:0}
header,main,footer{padding:2em}
header{background:darkslategray} header a{color:white;text-decoration:none}
h1{margin-top:0} main{max-width:60em}
</style>

<link rel="canonical" href="/info">
<link rel="alternate" href="/feed.xml" type="application/rss+xml" title="RSS">

</head>
<body class="page page__info">
<header><a href="/"></a></header>
<main class="content">





<h1>#pyUpload - Sicherer Datei-Upload-Server fÃ¼r eine einfache und sichere DateiÃ¼bertragung</h1>


<h3>Beschreibung</h3>

<p>pyUpload ist eine leistungsstarke und dennoch einfache LÃ¶sung fÃ¼r den sicheren Datei-Upload Ã¼ber HTTPS. Dieses Programm eignet sich ideal, um Dateien schnell und unkompliziert von einem Smartphone oder einem anderen GerÃ¤t auf einen Computer zu Ã¼bertragen. </p>

<p>Anstatt zusÃ¤tzliche Apps oder USB-Kabel zu nutzen, kann der Benutzer den Server starten, den automatisch generierten QR-Code mit dem Smartphone scannen und die Dateien direkt Ã¼ber die WeboberflÃ¤che hochladen. Der Computer speichert die hochgeladenen Dateien strukturiert in individuellen Verzeichnissen fÃ¼r jedes GerÃ¤t.</p>

<p>ZusÃ¤tzlich erstellt pyUpload bei Bedarf automatisch ein selbstsigniertes SSL-Zertifikat, um eine verschlÃ¼sselte Verbindung sicherzustellen. Damit bleibt die DateiÃ¼bertragung geschÃ¼tzt und zuverlÃ¤ssig.</p>

<h3>Download</h3>

<ul>
<li><strong>Portabel fÃ¼r Windows als .zip</strong>
[download id="2323"]</li>
</ul>

<blockquote>
  <p>Aktuell ist der Download der portablen und Compilierten Version gesperrt da es von diversen Virenscannern als Bedrohung eingestuft wird. Bei Interesse ist das Programm aktuell nur auf Anfrage per eMail erhÃ¤ltlich. In KÃ¼rze erfolgt eine VerÃ¶ffentlichung inklusive Code auf GitHub.</p>
</blockquote>

<h3>Features â€“ Die Vorteile von pyUpload auf einen Blick</h3>

<ul>
<li><strong>Sichere DateiÃ¼bertragung per HTTPS</strong> â€“ Alle Daten werden verschlÃ¼sselt Ã¼bertragen.</li>
<li><strong>Automatische Erstellung eines selbstsignierten SSL-Zertifikats</strong> â€“ Keine zusÃ¤tzliche Konfiguration notwendig.</li>
<li><strong>Intuitive, webbasierte BenutzeroberflÃ¤che</strong> â€“ Einfach zu bedienen, keine Installation erforderlich.</li>
<li><strong>Strukturierte Speicherung</strong> â€“ Dateien werden in client-spezifischen Verzeichnissen gespeichert.</li>
<li><strong>Zentralisierte und client-spezifische Logging-Funktion</strong> â€“ Detaillierte Nachverfolgung aller Uploads.</li>
<li><strong>Flexible Nutzung mit oder ohne GUI</strong> â€“ Start als Desktop-Anwendung oder reine Konsolen-Version mÃ¶glich.</li>
<li><strong>Schnelle Einrichtung</strong> â€“ Download, Entpacken und sofort loslegen!</li>
</ul>

<h3>Installationsanleitung â€“ So startest du pyUpload</h3>

<p>Es gibt zwei MÃ¶glichkeiten, pyUpload zu nutzen: Entweder die manuelle Installation oder die Nutzung einer vorgefertigten, ausfÃ¼hrbaren Version.</p>

<h4>1. Nutzung der fertigen Download-Version</h4>

<p>Falls du keine Python-Installation benÃ¶tigst, kannst du die vorgefertigte <strong>ZIP-Version</strong> von pyUpload herunterladen. Diese enthÃ¤lt bereits alle notwendigen Dateien und ist sofort einsatzbereit.</p>

<ol>
<li>Lade die neueste <strong>pyUpload.zip</strong> von der offiziellen Website herunter.</li>
<li>Entpacke die ZIP-Datei in einen beliebigen Ordner.</li>
<li>Starte die enthaltene <code>pyUpload.exe</code>.</li>
<li>Falls die grafische BenutzeroberflÃ¤che nicht benÃ¶tigt wird, kann die <code>pyUpload.exe</code> direkt in der Konsole mit <code>--nogui</code> gestartet werden:
<code>sh
pyUpload.exe --nogui
</code></li>
<li>Eine Ãœbersicht aller verfÃ¼gbaren Befehle und Optionen erhÃ¤ltst du mit:
<code>sh
pyUpload.exe --help
</code></li>
</ol>

<h4>2. Manuelle Installation fÃ¼r Python-Nutzer</h4>

<ol>
<li>Stelle sicher, dass <strong>Python 3</strong> auf deinem System installiert ist.</li>
<li>Installiere alle benÃ¶tigten AbhÃ¤ngigkeiten mit folgendem Befehl:
<code>sh
pip install -r requirements.txt
</code></li>
<li>Starte den Server mit:
<code>sh
python pyUpload.py
</code></li>
<li>Falls du keine grafische BenutzeroberflÃ¤che benÃ¶tigst, kannst du den Server im Konsolenmodus starten:
<code>sh
python pyUpload.py --nogui
</code></li>
</ol>

<h3>Zugriff auf die WeboberflÃ¤che</h3>

<ul>
<li>Sobald der Server lÃ¤uft, kann er Ã¼ber die lokale IP-Adresse aufgerufen werden:
<code>
https://&lt;server-ip&gt;:4443
</code></li>
<li>Falls die GUI-Version gestartet wurde, erscheint ein <strong>QR-Code</strong>, der die Verbindungsadresse enthÃ¤lt. Dies ermÃ¶glicht eine einfache Verbindung mit Smartphones und Tablets.</li>
</ul>

<h3>Datei-Upload leicht gemacht â€“ So funktioniert es</h3>

<ol>
<li>Ã–ffne die <strong>WeboberflÃ¤che</strong> im Browser.</li>
<li>WÃ¤hle die gewÃ¼nschte <strong>Datei aus</strong> und klicke auf <strong>â€žHochladenâ€œ</strong>.</li>
<li>Nach erfolgreichem Upload erscheint eine <strong>BestÃ¤tigungsseite</strong>, die den Abschluss der Ãœbertragung bestÃ¤tigt.</li>
</ol>

<h3>SSL-Zertifikatswarnung in Browsern umgehen</h3>

<p>Da pyUpload ein <strong>selbstsigniertes SSL-Zertifikat</strong> nutzt, kann es beim ersten Zugriff zu einer Warnung des Browsers kommen. Um die verschlÃ¼sselte Verbindung zu akzeptieren, gibt es zwei MÃ¶glichkeiten:</p>

<ul>
<li>In den meisten Browsern gibt es eine Option wie <strong>â€žErweitertâ€œ</strong> oder <strong>â€žTrotzdem fortfahrenâ€œ</strong>, um die Warnung zu Ã¼bergehen.</li>
<li>Alternativ kann das Zertifikat <strong>manuell importiert und als vertrauenswÃ¼rdig markiert</strong> werden, um kÃ¼nftige Warnmeldungen zu vermeiden.</li>
</ul>

<h3>Logging und Fehlerbehandlung â€“ Transparenz und Kontrolle</h3>

<ul>
<li>Alle <strong>Uploads und Anfragen</strong> werden in <strong>zentralen sowie client-spezifischen Logdateien</strong> gespeichert. Diese befinden sich im <code>logs/</code>-Verzeichnis.</li>
<li>Falls wÃ¤hrend der Nutzung von pyUpload <strong>Probleme auftreten</strong>, bietet ein Blick in diese Logdateien wertvolle Hinweise zur Fehlerbehebung.</li>
</ul>

<h3>Lizenz und Autor</h3>

<ul>
<li><strong>Entwickelt von Adam Skotarczak (C) 2025</strong>.</li>
</ul>




    <ul class="page__list">
    
        <li><a href="&#x2f;Tagebuch">Entwicklertagebuch</a></li>
    
        <li><a href="&#x2f;build-infos">
## exe erstellen:

### pyinstaller

pip install pyinstaller
pyinstaller --onefile --add-data &quot;template.html;.&quot; --add-data &quot;success.html;.&quot; --add-data &quot;favicon.ico;.&quot; --windowed --icon favicon.ico pyUpload.py
pyinstaller --add-data &quot;template.html;.&quot; --add-data &quot;success.html;.&quot; --add-data &quot;favicon.ico;.&quot; --windowed --icon favicon.ico pyUpload.py

### nuitka

python setup.py build
nuitka --standalone --onefile --enable-plugin=tk-inter --windows-console-mode=disable --windows-icon-from-ico=favicon.ico pyUpload.py



## requirements.txt:

pipreqs . --force</a></li>
    
        <li><a href="&#x2f;dev&#x2f;README">#pyUpload - Sicherer Datei-Upload-Server fÃ¼r eine einfache und sichere DateiÃ¼bertragung</a></li>
    
    </ul>



</main>
<footer><p>&copy; </footer>
</body>
</html>